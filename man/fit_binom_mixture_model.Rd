% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixmodel_functions.R
\name{fit_binom_mixture_model}
\alias{fit_binom_mixture_model}
\title{Fit a \code{J} component binomial mixture model}
\usage{
fit_binom_mixture_model(Den, Num, J, maxiter = 1000, maxrep = 50,
  tolfun = 1e-06, minprior = 0)
}
\arguments{
\item{Den}{A numeric vector of the association index denominator.}

\item{Num}{A numeric vector of the association index numerator.}

\item{J}{Integer number of components to fit.}

\item{maxiter}{Number of iterations. Default input = 1000.}

\item{maxrep}{Something. Default input = 50}

\item{tolfun}{Somehing else. Default input = 1e-06.}

\item{minprior}{Something else again. Default input = 0.}
}
\value{
Output is a list with the elements (accessed via index \code{[i]} or
\code{$element.name}): \cr \cr
\code{K.in} Number of components aimed to be fitted (will match input \code{J}).
Integer. \cr \cr
\code{K.out} Number of components fitted by the model. Returned as a sanity check.
Should match \code{K.in} & \code{J}.
\code{Mean} Mean association rates of the fitted componenets Numeric vector of
length \code{J}. \cr \cr
\code{Frequency} ? \cr \cr
\code{S} Shannons Entropy. Numeric. \cr \cr
\code{rho} ? \cr \cr
\code{logLik}Log-likelhood of the fitted model. \cr \cr
\code{BIC} Model Baysien Information Criteria \cr \cr
\code{AIC} Model Akalie Information Criteria. \cr \cr
\code{ICL} Model Inform... \cr \cr
\code{nrep} ? \cr \cr
\code{mu} Probability that each association in the data (rows) belongs to each
fitted component (1-\code{K}: columns). If provided row names will be carried through
from \code{names(Y)} and/or \code{names(x)}
}
\description{
\code{fit_binom_mixture_model} fits a \code{J} component mixture model to social association
data. This function will usually be only called through \code{\link{binom_assoc_mixt}} but it
can be used as a stand-alone function.
}
\examples{
# Generate simulated social data with a known number of components and sampling effort
K = 3 # number of types (K/J)
N = 20 # number of individuals
N.dyad = (N*(N-1))/2 #number of dyads
mean.d = 80 #sampling effort
bad.par = T
while(bad.par){
  mu = runif(K,0,1)
  a = runif(K,0,1)
  a = a/sum(a)
  if(min(dist(mu))>=0.1 & min(a)>=0.1/K) bad.par = F
}
rho = runif(K,0,0.015) #overdispersion
b1 = mu*(1/rho - 1) #shape parameters from means and overdispersion
b2 = ((mu-1)*(rho-1))/rho
k = sample(K, size = N.dyad, rep = T, prob = a) #assign classes
p = rbeta(n=N.dyad,shape1=b1[k],shape2=b2[k]) #assign association probabilities
d = rpois(N.dyad,mean.d) #assign denominators
x = rbinom(n=N.dyad,size=d,prob=p) #assign numerators
names(d) = as.roman(seq(1,length(d),1)) #Add edge names
names(x) = as.roman(seq(1,length(x),1)) # Add edge names

# Run model
fitted.model = fit_binom_mixture_model(Den = d, Num = x, J = 5)



}
\seealso{
\code{\link{binom_assoc_mixt}}
}
